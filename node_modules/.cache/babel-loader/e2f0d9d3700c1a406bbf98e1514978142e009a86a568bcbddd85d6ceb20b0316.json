{"ast":null,"code":"var _jsxFileName = \"/home/dell/Documents/Ram/Ghost/TypeScript/Loan Calculator/src/components/LineChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      const ctx = chartRef.current.getContext(\"2d\");\n    }\n    if (ctx) {\n      const chartData = {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [{\n          label: \"My Dataset\",\n          data: [10, 20, 15, 25, 30, 35],\n          borderColor: \"blue\",\n          fill: false\n        }]\n      };\n    }\n    new Chart(ctx, {\n      type: \"line\",\n      data: chartData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","LineChart","_s","chartRef","current","ctx","getContext","chartData","labels","datasets","label","data","borderColor","fill","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dell/Documents/Ram/Ghost/TypeScript/Loan Calculator/src/components/LineChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Chart, { ChartConfiguration } from \"chart.js\";\n\nconst LineChart: React.FC = () => {\n  const chartRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (chartRef.current) {\n      const ctx = chartRef.current.getContext(\"2d\");\n    }\n\n    if (ctx) {\n      const chartData = {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [\n          {\n            label: \"My Dataset\",\n            data: [10, 20, 15, 25, 30, 35],\n            borderColor: \"blue\",\n            fill: false,\n          },\n        ],\n      };\n    }\n    new Chart(\n      ctx as CanvasRenderingContext2D,\n      {\n        type: \"line\",\n        data: chartData,\n      } as ChartConfiguration<\"line\">\n    );\n  }, []);\n\n  return <canvas ref={chartRef}></canvas>;\n};\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAA8B,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGN,MAAM,CAA2B,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,CAACC,OAAO,EAAE;MACpB,MAAMC,GAAG,GAAGF,QAAQ,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAC/C;IAEA,IAAID,GAAG,EAAE;MACP,MAAME,SAAS,GAAG;QAChBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;QAChEC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAC9BC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC;IACH;IACA,IAAIf,KAAK,CACPO,GAAG,EACH;MACES,IAAI,EAAE,MAAM;MACZH,IAAI,EAAEJ;IACR,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOP,OAAA;IAAQe,GAAG,EAAEZ;EAAS;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AACzC,CAAC;AAACjB,EAAA,CA/BID,SAAmB;AAAAmB,EAAA,GAAnBnB,SAAmB;AAiCzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}